
ldrb.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <start>:
   0:	ea000029 	b	ac <reset>
   4:	ea00002e 	b	c4 <undef>
   8:	ea00002a 	b	b8 <swi>
   c:	ea00002d 	b	c8 <pfa>
  10:	ea00002d 	b	cc <da>
  14:	e1a00000 	nop			; (mov r0, r0)
  18:	ea00002c 	b	d0 <irq>
  1c:	ea00002c 	b	d4 <fiq>

00000020 <prog>:
  20:	e3a00000 	mov	r0, #0
  24:	e2804001 	add	r4, r0, #1
  28:	e2802c01 	add	r2, r0, #256	; 0x100
  2c:	e28330a0 	add	r3, r3, #160	; 0xa0
  30:	e5830004 	str	r0, [r3, #4]  ; store 0 into 0xa4
  34:	e7c33104 	strb	r3, [r3, r4, lsl #2] ; store4 0xa0 into (0xa0 + 4 = 0xa) 
  38:	e7d31104 	ldrb	r1, [r3, r4, lsl #2] ; put that into r1
  3c:	e3a03040 	mov	r3, #64	; 0x40        ; r3 is now 0x40
  40:	e7833104 	str	r3, [r3, r4, lsl #2]  ; store 0x40 into (40 + 4)
  44:	e7935104 	ldr	r5, [r3, r4, lsl #2]  ; load 0x40 into r5
  48:	e5833000 	str	r3, [r3]              ; store 40 into addr r3=40
  4c:	e5f36001 	ldrb	r6, [r3, #1]!        ; r3 = 41, r6 gets 0
  50:	e083b00b 	add	fp, r3, fp             ; fp(r11) gets 0 + 41
  54:	e4d37001 	ldrb	r7, [r3], #1         ; load 0 into r7, r3 = 42
  58:	e083b00b 	add	fp, r3, fp             ; r11 = 41+42
  5c:	e083b00b 	add	fp, r3, fp             ; r11 = 83+42
  60:	e3a03040 	mov	r3, #64	; 0x40         ; r3 = 40
  64:	e4938004 	ldr	r8, [r3], #4           ; load 40 into r8, r3 = 44
  68:	e083b00b 	add	fp, r3, fp             ; c5 + 44 = 109
  6c:	e5339004 	ldr	r9, [r3, #-4]!          ; r3 = 40, r9 = 40
  70:	e083b00b 	add	fp, r3, fp              ; r11 = 109 + 40 = 149
  74:	e7f3a104 	ldrb	sl, [r3, r4, lsl #2]! ; r3 = 40+4=44, load 40 into r10
  78:	e083b00b 	add	fp, r3, fp              ; 149 + 44 = 18d
  7c:	e3a03040 	mov	r3, #64	; 0x40          ; r3 = 40
  80:	e6c53104 	strb	r3, [r5], r4, lsl #2  ; store 0x40 into addr 40, r5 = 44
  84:	e083b00b 	add	fp, r3, fp              ; r11 = 18d+40 = 1cd
  88:	e3a03040 	mov	r3, #64	; 0x40          ; r3 = 40;
  8c:	e6d5c104 	ldrb	ip, [r5], r4, lsl #2  ; ldrb from addr 44 into r12 (40), r5 = 48
  90:	e083b00b 	add	fp, r3, fp              ; r11 = 1cd + 40 = 20d
  94:	e3a03040 	mov	r3, #64	; 0x40          ; r3 = 40
  98:	e6853104 	str	r3, [r5], r4, lsl #2    ; store 0x40 into addr 48, r5 = 4c
  9c:	e083b00b 	add	fp, r3, fp              ; r11 = 20d + 40 = 24d
  a0:	e3a03040 	mov	r3, #64	; 0x40          ; r3 = 0x40;
  a4:	e695d104 	ldr	sp, [r5], r4, lsl #2    ; load from addr 4c (value: 0) into r13, r5 = 50

000000a8 <stop>:
  a8:	eafffffe 	b	a8 <stop>

000000ac <reset>:
  ac:	e3a01000 	mov	r1, #0
  b0:	e3a02000 	mov	r2, #0
  b4:	eaffffd9 	b	20 <prog>

000000b8 <swi>:
  b8:	e0812002 	add	r2, r1, r2
  bc:	e1a01002 	mov	r1, r2
  c0:	e1b0f00e 	movs	pc, lr

000000c4 <undef>:
  c4:	eaffffd5 	b	20 <prog>

000000c8 <pfa>:
  c8:	eaffffd4 	b	20 <prog>

000000cc <da>:
  cc:	eaffffd3 	b	20 <prog>

000000d0 <irq>:
  d0:	eaffffd2 	b	20 <prog>

000000d4 <fiq>:
  d4:	eaffffd1 	b	20 <prog>
